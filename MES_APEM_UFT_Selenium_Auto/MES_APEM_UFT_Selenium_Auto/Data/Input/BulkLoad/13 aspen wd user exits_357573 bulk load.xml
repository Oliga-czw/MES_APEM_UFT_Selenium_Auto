<?xml version="1.0" encoding="utf-8"?>
<UserExits>
  <UserExit description="Adapt to scanner configuration and detect if barcode was actually scanned versus mannually entered" name="Barcode Scanning">
    <Code>@               @               @               //Scanned barcode is prefixed with "~"</Code>
    <Code>@               @               @RETURN_NO      LEFT(Barcode,1) = "~"</Code>
    <Code>@               @RETURN_YES     @RETURN_YES     Barcode:=MID(Barcode,2,LEN(Barcode))</Code>
    <Param name="Barcode" testValue="" type="string" />
  </UserExit>
  <UserExit description="Dispensed container UID generation" name="Dispensed Containers">
    <Code>@               @               @               //Container UID is</Code>
    <Code>@               @               @               //order (10 char right-padded with zeros)</Code>
    <Code>@               @               @               //order-sequential(4 char left padded with zeros )</Code>
    <Code>@               @               @               sOrder := LEFT(OrderTag,10)</Code>
    <Code>@               @               @               sOrderA := TRIM(sOrder)</Code>
    <Code>@               @               @               //Get chars for Order part</Code>
    <Code>@               @               @               sOrderA := TRIM(sOrder)</Code>
    <Code>@LOOP_ORDER     @               @               nCount := LEN(sOrderA)</Code>
    <Code>@               @               @SEQ_PART       nCount &lt; 10</Code>
    <Code>@               @LOOP_ORDER     @               sOrderA := sOrderA + "0"</Code>
    <Code>@               @               @               //Seq part</Code>
    <Code>@SEQ_PART       @               @               SEQ := Order_counter</Code>
    <Code>@               @               @               sSEQ := LEFT(SEQ,4)</Code>
    <Code>@               @               @               sSEQA := TRIM(sSEQ)</Code>
    <Code>@               @               @               //Get  chars for Seq</Code>
    <Code>@LOOP_SEQ       @               @               nCount := LEN(sSEQA)</Code>
    <Code>@               @               @ABSSEQ_PART    nCount &lt; 4</Code>
    <Code>@               @LOOP_SEQ       @               sSEQA :=  "0" + sSEQA</Code>
    <Code>@               @               @               //System Seq part</Code>
    <Code>@ABSSEQ_PART    @               @               absSEQ := Absolute_counter</Code>
    <Code>@               @               @               sAbsSEQ:= LEFT(absSEQ,10)</Code>
    <Code>@               @               @               sAbsSEQA := TRIM(sAbsSEQ)</Code>
    <Code>@               @               @               //Get  chars for Seq</Code>
    <Code>@LOOP_ABSSEQ    @               @               nAbsCount := LEN(sAbsSEQA)</Code>
    <Code>@               @               @END            nAbsCount &lt; 10</Code>
    <Code>@               @LOOP_ABSSEQ    @               sAbsSEQA :=  "0" + sAbsSEQA</Code>
    <Code>@END            @               @               UID := sOrderA + sSEQA +  sAbsSEQA</Code>
    <Param name="Uid" testValue="" type="string" />
    <Param name="OrderTag" testValue="" type="string" />
    <Param name="ProductCode" testValue="" type="string" />
    <Param name="Order_counter" testValue="" type="string" />
    <Param name="Absolute_counter" testValue="" type="string" />
  </UserExit>
  <UserExit description="InventoryAdjustments" name="Inventory Adjustments">
    <Code>@               @               @               //Data exposes: HUTag, MaterialID, MaterialDesc, LotTag, OrderTag</Code>
    <Code>@               @               @               //BoothTag, Qty, UOM, ReservationItem, BomID</Code>
    <Code>@               @               @               xmlStr:="&lt;?xml version='1.0' encoding='UTF-8'?&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;ProductionPerformance xmlns='http://www.wbf.org/xml/B2MML-V0401'&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;ProductionResponse&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;ProductionRequestID&gt;"+Data.OrderTag+"&lt;/ProductionRequestID&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;SegmentResponse&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;ProductSegmentID&gt;"+Data.BomID+"&lt;/ProductSegmentID&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;MaterialActual&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;MaterialDefinitionID&gt;"+Data.MaterialID+"&lt;/MaterialDefinitionID&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;MaterialLotID&gt;"+Data.LotTag+"&lt;/MaterialLotID&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;MaterialSubLotID&gt;"+Data.HUTag+"&lt;/MaterialSubLotID&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;Description&gt;"+Data.MaterialDesc+"&lt;/Description&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;Location&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;EquipmentID&gt;"+Data.BoothTag+"&lt;/EquipmentID&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;EquipmentElementLevel&gt;WorkCenter&lt;/EquipmentElementLevel&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;/Location&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;MaterialUse OtherValue='Adjusted'&gt;Other&lt;/MaterialUse&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;Quantity&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;QuantityString&gt;"+Data.Qty+"&lt;/QuantityString&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;DataType&gt;decimal&lt;/DataType&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;UnitOfMeasure&gt;"+Data.UOM+"&lt;/UnitOfMeasure&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;/Quantity&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;MaterialActualProperty&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;ID&gt;ReservationItem&lt;/ID&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;Value&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;ValueString&gt;"+Data.ReservationItem+"&lt;/ValueString&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;DataType&gt;string&lt;/DataType&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;UnitOfMeasure&gt;&lt;/UnitOfMeasure&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;/Value&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;/MaterialActualProperty&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;/MaterialActual&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;/SegmentResponse&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;/ProductionResponse&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;/ProductionPerformance&gt;"</Code>
    <Code>@               @               @               result:= WD_EXEC_SAPUploadMessages(xmlStr)</Code>
    <Param name="Data" testValue="" type="string" />
  </UserExit>
  <UserExit description="Determine if barcode is from dispensed container vs. pallet" name="Kitting Scan">
    <Code>@               @               @               //Dispensed container barcode length as defined eighteen chars</Code>
    <Code>@               @RETURN_YES     @RETURN_NO      LEN(Barcode)=24</Code>
    <Param name="Barcode" testValue="" type="string" />
  </UserExit>
  <UserExit description="MaterialConsumptionReporting" name="Material Consumption Rpt">
    <Code>@               @               @               //Data exposes: HUTag, MaterialID, MaterialDesc, LotTag, huEmpty, huAdjustment, OrderTag</Code>
    <Code>@               @               @               //BoothTag, Qty, UOM, BomID, Route, Reservation, ReservationItem, TargetHUTag</Code>
    <Code>@               @               @               xmlStr:="&lt;?xml version='1.0' encoding='UTF-8'?&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;ProductionPerformance xmlns='http://www.wbf.org/xml/B2MML-V0401'&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;ProductionResponse&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;ProductionRequestID&gt;"+Data.OrderTag+"&lt;/ProductionRequestID&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;ProductProductionRuleID&gt;"+Data.Route+"&lt;/ProductProductionRuleID&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;SegmentResponse&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;ProductSegmentID&gt;"+Data.BomID+"&lt;/ProductSegmentID&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;MaterialActual&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;MaterialDefinitionID&gt;"+Data.MaterialID+"&lt;/MaterialDefinitionID&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;MaterialLotID&gt;"+Data.LotTag+"&lt;/MaterialLotID&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;MaterialSubLotID&gt;"+Data.HUTag+"&lt;/MaterialSubLotID&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;Description&gt;"+Data.MaterialDesc+"&lt;/Description&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;Location&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;EquipmentID&gt;"+Data.BoothTag+"&lt;/EquipmentID&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;EquipmentElementLevel&gt;WorkCenter&lt;/EquipmentElementLevel&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;/Location&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;MaterialUse&gt;Consumed&lt;/MaterialUse&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;Quantity&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;QuantityString&gt;"+Data.Qty+"&lt;/QuantityString&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;DataType&gt;decimal&lt;/DataType&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;UnitOfMeasure&gt;"+Data.UOM+"&lt;/UnitOfMeasure&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;/Quantity&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;MaterialActualProperty&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;ID&gt;Reservation&lt;/ID&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;Value&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;ValueString&gt;"+Data.Reservation+"&lt;/ValueString&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;DataType&gt;string&lt;/DataType&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;UnitOfMeasure&gt;&lt;/UnitOfMeasure&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;/Value&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;/MaterialActualProperty&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;MaterialActualProperty&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;ID&gt;ReservationItem&lt;/ID&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;Value&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;ValueString&gt;"+Data.ReservationItem+"&lt;/ValueString&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;DataType&gt;string&lt;/DataType&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;UnitOfMeasure&gt;&lt;/UnitOfMeasure&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;/Value&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;/MaterialActualProperty&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;MaterialActualProperty&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;ID&gt;TargetHUID&lt;/ID&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;Value&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;ValueString&gt;"+Data.TargetHUTag+"&lt;/ValueString&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;DataType&gt;string&lt;/DataType&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;UnitOfMeasure&gt;&lt;/UnitOfMeasure&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;/Value&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;/MaterialActualProperty&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;/MaterialActual&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;/SegmentResponse&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;/ProductionResponse&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;/ProductionPerformance&gt;"</Code>
    <Code>@               @               @               result:= WD_EXEC_SAPUploadMessages(xmlStr)</Code>
    <Param name="Data" testValue="" type="string" />
  </UserExit>
  <UserExit description="OrderStatusUpdates" name="Order Status Updates">
    <Code>@               @               @               //Data exposes: ProductTag, Qty, UOM, OrderTag, PalletTag, StartTime, EndTime, Status</Code>
    <Code>@               @               @               xmlStr:="&lt;?xml version='1.0' encoding='UTF-8'?&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;ProductionPerformance xmlns='http://www.wbf.org/xml/B2MML-V0401'&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;ProductionResponse&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;ProductionRequestID&gt;"+Data.OrderTag+"&lt;/ProductionRequestID&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;StartTime&gt;"+Data.StartTime+"&lt;/StartTime&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;EndTime&gt;"+Data.EndTime+"&lt;/EndTime&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;SegmentResponse&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;MaterialActual&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;MaterialDefinitionID&gt;"+Data.ProductTag+"&lt;/MaterialDefinitionID&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;MaterialUse&gt;Produced&lt;/MaterialUse&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;Quantity&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;QuantityString&gt;"+Data.Qty+"&lt;/QuantityString&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;DataType&gt;decimal&lt;/DataType&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;UnitOfMeasure&gt;"+Data.UOM+"&lt;/UnitOfMeasure&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;/Quantity&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;/MaterialActual&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;/SegmentResponse&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;ResponseState&gt;"+Data.Status+"&lt;/ResponseState&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;/ProductionResponse&gt;"</Code>
    <Code>@               @               @               xmlStr:=xmlStr+"&lt;/ProductionPerformance&gt;"</Code>
    <Code>@               @               @               result:= WD_EXEC_SAPUploadMessages(xmlStr)</Code>
    <Param name="Data" testValue="" type="string" />
  </UserExit>
  <UserExit description="Pallet UID generation" name="Pallets">
    <Code>@               @               @               //Pallet UID is</Code>
    <Code>@               @               @               //order (10 char right-padded with zeros)</Code>
    <Code>@               @               @               //order-sequential(2 char left padded with zeros )</Code>
    <Code>@               @               @               sOrder := LEFT(OrderTag,10)</Code>
    <Code>@               @               @               sOrderA := TRIM(sOrder)</Code>
    <Code>@               @               @               //Get 10 chars for Order part</Code>
    <Code>@LOOP_ORDER     @               @               nCount := LEN(sOrderA)</Code>
    <Code>@               @               @SEQ_PART       nCount &lt; 10</Code>
    <Code>@               @LOOP_ORDER     @               sOrderA := sOrderA + "0"</Code>
    <Code>@               @               @               //Seq part</Code>
    <Code>@SEQ_PART       @               @               SEQ := Absolute_counter</Code>
    <Code>@               @               @               sSEQ := LEFT(SEQ,10)</Code>
    <Code>@               @               @               sSEQA := TRIM(sSEQ)</Code>
    <Code>@LOOP_SEQ       @               @               nCount := LEN(sSEQA)</Code>
    <Code>@               @               @END            nCount &lt; 10</Code>
    <Code>@               @LOOP_SEQ       @               sSEQA :=  "0" + sSEQA</Code>
    <Code>@END            @               @               UID := sOrderA + sSEQA</Code>
    <Param name="UID" testValue="" type="string" />
    <Param name="OrderTag" testValue="" type="string" />
    <Param name="ProductCode" testValue="" type="string" />
    <Param name="Order_counter" testValue="" type="string" />
    <Param name="Absolute_counter" testValue="" type="string" />
  </UserExit>
  <UserExit description="Order BOM-recipe to BOM-exception mapping" name="Order BOM Mapping">
    <Code>@               @               @               BOMKey:=Route</Code>
    <Param name="BOMKey" testValue="" type="string" />
    <Param name="Route" testValue="" type="string" />
  </UserExit>
  <UserExit description="MaterialUpdateNotification" name="Material Update Notify">
    <Code>@               @               @               result:= WD_EXEC_SendMail(MailSubject, MailContent)</Code>
    <Param name="MaterialID" testValue="" type="string" />
    <Param name="MaterialTag" testValue="" type="string" />
    <Param name="MaterialCode" testValue="" type="string" />
    <Param name="MaterialDesc" testValue="" type="string" />
    <Param name="MailSubject" testValue="" type="string" />
    <Param name="EmailContent" testValue="" type="string" />
  </UserExit>
  <UserExit description="Label printing" name="Label Printing">
    <Code>@               @               @               //Data exposes: reprintFlag, customerName, orderNum, productName, productDescrip</Code>
    <Code>@               @               @               //quantity, batch, materialCode, materialLot, potency, materialDescrip</Code>
    <Code>@               @               @               //gross, booth, boothGroup, tare, scale, net, operator, activeDate, barcodeNum</Code>
    <Code>@               @               @               //palletNum, containers, hpImage1, hpImage2, hpImage3, hpImage4, hpImage5</Code>
    <Code>@               @               @               //hpStmt1, hpStmt2, hpStmt3, hpStmt4, hpStmt5, lot, sourceMaterialDescrip</Code>
    <Code>@               @               @               //sourceMaterialNum, sourceLotNum, handlingUnitNum, expirationDate</Code>
    <Code>@               @               @               //usageDate, retestDate, location</Code>
    <Code>@               @               @               fileContent := Data.reprintFlag</Code>
    <Code>@               @               @               Message:= WD_EXEC_PrintDataFile(TemplateType, PrinterAddress, fileContent, ".tmp")</Code>
    <Param name="TemplateType" testValue="" type="string" />
    <Param name="PrinterAddress" testValue="" type="string" />
    <Param name="Data" testValue="" type="string" />
    <Param name="Message" testValue="" type="string" />
  </UserExit>
  <UserExit description="User customization on order download" name="Order Download">
    <Code>@               @               @               //Data exposes all download order and material properties from downloaded XML.</Code>
    <Code>@               @               @               //Data parameter is used as input and output parameter.</Code>
    <Code>@               @               @               //To store user data, please use config module to design user tables.</Code>
    <Code>@               @               @               //User table data can only be used in other UserExits as needed.</Code>
    <Code>@               @               @               //Data.Description := "After UserExit."</Code>
    <Code>@               @               @               //Do something else as well.</Code>
    <Code>@               @               @               //ms := Data.MATERIALS</Code>
    <Code>@               @               @               //m1 := ms[1]</Code>
    <Code>@               @               @               //m2 := ms[2]</Code>
    <Code>@               @               @               //m1.WEIGHNOTES := "Store at temprature between 32F and 90F"</Code>
    <Code>@               @               @               //m2.WEIGHNOTES := "Store at temprature under 40F"</Code>
    <Code>@               @               @               //ms[1] := m1</Code>
    <Code>@               @               @               //ms[2] := m2</Code>
    <Code>@               @               @               //Data.MATERIALS := ms</Code>
    <Code>@               @               @               //For example User Table WD_ORDER_AUX is designed properly, the following code can be used as an example</Code>
    <Code>@               @               @               //SQLPS := "ORDER_TAG=Data.ID,WORK_CENTER=Data.WORKCENTER,ALT_FIELD1=Data.ALT_FIELD1,ALT_FIELD2=Data.ALT_FIELD2"</Code>
    <Code>@               @               @               //SQL_INSERT("WD_ORDER_AUX", SQLPS)</Code>
    <Code>@               @RETURN_NO      @</Code>
    <Param name="Data" testValue="" type="struct" />
  </UserExit>
  <UserExit description="Customization of ERP material download" name="Material Download">
    <Code>@               @               @               //Data exposes all download material properties from downloaded XML.</Code>
    <Code>@               @               @               //Data parameter is used as input and output parameter.</Code>
    <Code>@               @               @               //To store user data, please use config module to design user tables.</Code>
    <Code>@               @               @               //User table data can only be used in other UserExits as needed.</Code>
    <Param name="Data" testValue="" type="string" />
  </UserExit>
  <UserExit description="User customization on inventory download" name="Inventory Download">
    <Code>@               @               @               //Data exposes all download inventory properties from downloaded XML.</Code>
    <Code>@               @               @               //Data parameter is used as input and output parameter.</Code>
    <Code>@               @               @               //To store user data, please use config module to design user tables.</Code>
    <Code>@               @               @               //User table data can only be used in other UserExits as needed.</Code>
    <Code>@               @               @</Code>
    <Code>@               @               @</Code>
    <Param name="Data" testValue="" type="struct" />
  </UserExit>
</UserExits>